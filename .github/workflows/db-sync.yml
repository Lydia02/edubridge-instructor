name: Prisma Database Sync

on:
  push:
    branches:
      - main # Trigger on pushes to the main branch
  workflow_dispatch: # Allow manual triggering of the workflow

jobs:
  sync-database:
    name: Sync Prisma Migrations
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Set up Node.js (Node.js 20 for compatibility)
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      # Step 3: Install dependencies
      - name: Install Dependencies
        working-directory: instructor/backend # Adjust to the correct subdirectory
        run: npm install

      # Step 4: Debug DATABASE_URL
      - name: Debug DATABASE_URL
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: echo "DATABASE_URL is set."

      # Step 5: Validate Prisma schema
      - name: Validate Prisma Schema
        working-directory: instructor/backend
        run: npx prisma validate

      # Step 6: Test Database Connection
      - name: Test Database Connection
        working-directory: instructor/backend
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: npx prisma db pull

      # Step 7: Apply Prisma migrations to the online database
      - name: Apply Prisma Migrations
        working-directory: instructor/backend
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: npx prisma migrate deploy

      # Step 8: Notify on failure (Optional)
      - name: Notify on Failure
        if: failure()
        run: echo "Database migration failed!"
